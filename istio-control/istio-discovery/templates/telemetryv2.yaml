{{- if and .Values.telemetry.enabled .Values.telemetry.v2.enabled }}
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: metadata-exchange
{{- if .Values.global.configRootNamespace }}
  namespace: {{ .Values.global.configRootNamespace }}
{{- else }}
  namespace: {{ .Release.Namespace }}
{{- end }}
spec:
  configPatches:
    - applyTo: HTTP_FILTER
      match:
        context: ANY # inbound, outbound, and gateway
        listener:
          filterChain:
            filter:
              name: "envoy.http_connection_manager"
      proxy:
        proxyVersion: {{ .Values.telemetry.v2.proxyMatch.proxyVersion }}
      patch:
        operation: INSERT_BEFORE
        value:
          name: envoy.filters.http.wasm
          config:
            config:
              configuration: envoy.wasm.metadata_exchange
              vm_config:
                runtime: envoy.wasm.runtime.null
                code:
                  local:
                    inline_string: envoy.wasm.metadata_exchange
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: stats-filter
{{- if .Values.global.configRootNamespace }}
  namespace: {{ .Values.global.configRootNamespace }}
{{- else }}
  namespace: {{ .Release.Namespace }}
{{- end }}
spec:
  configPatches:
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_OUTBOUND
        proxy:
          proxyVersion: {{ .Values.telemetry.v2.proxyMatch.proxyVersion }}
        listener:
          filterChain:
            filter:
              name: "envoy.http_connection_manager"
              subFilter:
                name: "envoy.router"
      patch:
        operation: INSERT_BEFORE
        value:
          name: envoy.filters.http.wasm
          config:
            config:
              root_id: stats_outbound
              configuration: |
                {
                  "debug": "false",
                  "stat_prefix": "istio",
                }
              vm_config:
                vm_id: stats_outbound
                runtime: envoy.wasm.runtime.null
                code:
                  local:
                    inline_string: envoy.wasm.stats
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_INBOUND
        proxy:
          proxyVersion: {{ .Values.telemetry.v2.proxyMatch.proxyVersion }}
        listener:
          filterChain:
            filter:
              name: "envoy.http_connection_manager"
              subFilter:
                name: "envoy.router"
      patch:
        operation: INSERT_BEFORE
        value:
          name: envoy.filters.http.wasm
          config:
            config:
              root_id: stats_inbound
              configuration: |
                {
                  "debug": "false",
                  "stat_prefix": "istio",
                }
              vm_config:
                vm_id: stats_inbound
                runtime: envoy.wasm.runtime.null
                code:
                  local:
                    inline_string: envoy.wasm.stats
    - applyTo: HTTP_FILTER
      match:
        context: GATEWAY
        proxy:
          proxyVersion: {{ .Values.telemetry.v2.proxyMatch.proxyVersion }}
        listener:
          filterChain:
            filter:
              name: "envoy.http_connection_manager"
              subFilter:
                name: "envoy.router"
      patch:
        operation: INSERT_BEFORE
        value:
          name: envoy.filters.http.wasm
          config:
            config:
              root_id: stats_outbound
              configuration: |
                {
                  "debug": "false",
                  "stat_prefix": "istio",
                }
              vm_config:
                vm_id: stats_outbound
                runtime: envoy.wasm.runtime.null
                code:
                  local:
                    inline_string: envoy.wasm.stats
{{- end }}

