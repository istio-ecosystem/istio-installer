---
# Source: citadel/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-citadel11-service-account
  namespace: istio-system

  labels:
    release: istio-system-istio-system-security


---
# Source: citadel/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: istio-citadel11-istio-system
  labels:
    app: citadel
    release: istio-system-istio-system-security
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create", "get", "watch", "list", "update", "delete"]
- apiGroups: [""]
  resources: ["serviceaccounts"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "watch", "list"]

---
# Source: citadel/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: istio-citadel11-istio-system
  labels:
    release: istio-system-istio-system-security
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-citadel11-istio-system
subjects:
  - kind: ServiceAccount
    name: istio-citadel11-service-account
    namespace: istio-system

---
# Source: citadel/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: istio-citadel11
  namespace: istio-system
  labels:
    app: citadel
    istio: citadel
    release: istio-system-istio-system-security

spec:
  ports:
    - name: grpc-citadel
      port: 8060
      targetPort: 8060
      protocol: TCP
    - name: http-monitoring
      port: 15014
  selector:
    app: citadel

---
# Source: citadel/templates/deployment.yaml
# istio CA watching all namespaces
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: istio-citadel11
  namespace: istio-system
  labels:
    app: citadel
    istio: citadel
    release: istio-system-istio-system-security

spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: citadel
        istio: citadel
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: istio-citadel11-service-account
      containers:
        - name: citadel
          image: "istionightly/citadel:nightly-master"
          imagePullPolicy: Always
          args:
            - --append-dns-names=true
            - --grpc-port=8060
          # global.tag may contain something like "release-1.1-latest-daily". Assume >1.2 if we cannot extract semver version.
            - --grpc-host-identities=citadel
            - --citadel-storage-namespace=istio-system
            - --custom-dns-names=$(CITADEL_DNS)
            - --self-signed-ca=true
            - --trust-domain=cluster.local
          resources:
            requests:
              cpu: 10m
            
      affinity:      
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - ppc64le
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x

