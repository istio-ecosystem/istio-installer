{{ $gateway := index .Values "gateways" "istio-ingressgateway" }}
{{- if $gateway.k8sIngress }}
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: istio-autogenerated-k8s-ingress
  namespace: {{ .Release.Namespace }}
  labels:
    app: ingressgateway
    release: {{ .Release.Name }}
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      protocol: HTTP2
      name: http
    hosts:
    - "*"
{{ if $gateway.k8sIngressHttps }}
  - port:
      number: 443
      protocol: HTTPS
      name: https-default
    tls:
      mode: SIMPLE
      serverCertificate: /etc/istio/ingress-certs/tls.crt
      privateKey: /etc/istio/ingress-certs/tls.key
    hosts:
    - "*"
{{ end }}    
---    
{{ end }}


{{- if .Values.global.multiCluster.enabled }}
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: istio-multicluster-egressgateway
  namespace: {{ .Release.Namespace }}
  labels:
    app: ingressgateway
    release: {{ .Release.Name }}
spec:
  selector:
    istio: egressgateway
  servers:
  - hosts:
    - "*.global"
    port:
      name: tls
      number: 15443
      protocol: TLS
    tls:
      mode: AUTO_PASSTHROUGH
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: istio-multicluster-ingressgateway
  namespace: {{ .Release.Namespace }}
  labels:
    app: ingressgateway
    release: {{ .Release.Name }}
spec:
  selector:
    istio: ingressgateway
  servers:
  - hosts:
    - "*.global"
    port:
      name: tls
      number: 15443
      protocol: TLS
    tls:
      mode: AUTO_PASSTHROUGH
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: istio-multicluster-ingressgateway
  namespace: {{ .Release.Namespace }}
  labels:
    app: ingressgateway
    release: {{ .Release.Name }}
spec:
   workloadLabels:
     istio: ingressgateway
   filters:
   - listenerMatch:
       portNumber: 15443
       listenerType: GATEWAY
     insertPosition:
       index: AFTER
       relativeTo: envoy.filters.network.sni_cluster
     filterName: envoy.filters.network.tcp_cluster_rewrite
     filterType: NETWORK
     filterConfig:
       cluster_pattern: "\\.global$"
       cluster_replacement: ".svc.{{ .Values.global.proxy.clusterDomain }}"       
---
## To ensure all traffic to *.global is using mTLS
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: istio-multicluster-destinationrule
  namespace: {{ .Release.Namespace }}
  labels:
    app: ingressgateway
    release: {{ .Release.Name }}
spec:
  host: "*.global"
  {{- if .Values.global.defaultConfigVisibilitySettings }}
  exportTo:
  - '*'
  {{- end }}
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
---
{{- end }}
