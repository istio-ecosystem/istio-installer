apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: istio-policy
  namespace: {{ .Release.Namespace }}
  labels:
    app: istio-policy
    istio: mixer
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.mixer.policy.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: istio-policy
      istio: mixer
      istio-mixer-type: policy
  template:
    metadata:
      labels:
        app: istio-policy
        istio: mixer
        istio-mixer-type: policy
      annotations:
        sidecar.istio.io/inject: "false"
        scheduler.alpha.kubernetes.io/critical-pod: ""
{{- with .Values.mixer.policy.podAnnotations }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      serviceAccountName: istio-mixer-service-account
{{- if .Values.global.priorityClassName }}
      priorityClassName: "{{ .Values.global.priorityClassName }}"
{{- end }}
      volumes:
      - name: istio-certs
        secret:
          secretName: istio.istio-mixer-service-account
          optional: true
      - name: uds-socket
        emptyDir: {}
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
      containers:
      - name: mixer
{{- if contains "/" .Values.mixer.policy.image }}
        image: "{{ .Values.mixer.policy.image }}"
{{- else }}
        image: "{{ .Values.global.hub }}/{{ .Values.mixer.policy.image }}:{{ .Values.global.tag }}"
{{- end }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        ports:
        - containerPort: 15014
        - containerPort: 42422
        args:
          - --address
          - unix:///sock/mixer.socket
{{- if .Values.global.useMCP }}
    {{- if .Values.global.controlPlaneSecurityEnabled}}
          - --configStoreURL=mcps://istio-galley.{{ .Values.global.istioNamespace }}.svc:15019
          - --certFile=/etc/certs/cert-chain.pem
          - --keyFile=/etc/certs/key.pem
          - --caCertFile=/etc/certs/root-cert.pem
    {{- else }}
          - --configStoreURL=mcp://istio-galley.{{ .Values.global.istioNamespace }}.svc:9901
    {{- end }}
{{- else }}
          - --configStoreURL=k8s://
{{- end }}
          - --configDefaultNamespace={{ .Release.Namespace }}
          {{- if .Values.global.tracer.zipkin.address }}
          - --trace_zipkin_url=http://{{- .Values.global.tracer.zipkin.address }}/api/v1/spans
          {{- else }}
          - --trace_zipkin_url=http://zipkin:9411/api/v1/spans
          {{- end }}
        {{- if .Values.mixer.policy.env }}
        env:
        {{- range $key, $val := .Values.mixer.policy.env }}
        - name: {{ $key }}
          value: "{{ $val }}"
        {{- end }}
        {{- end }}
        resources:
{{- if .Values.mixer.policy.resources }}
{{ toYaml .Values.mixer.policy.resources | indent 10 }}
{{- else }}
{{ toYaml .Values.global.defaultResources | indent 10 }}
{{- end }}
        volumeMounts:
{{- if .Values.global.useMCP }}
        - name: istio-certs
          mountPath: /etc/certs
          readOnly: true
{{- end }}
        - name: uds-socket
          mountPath: /sock
        livenessProbe:
          httpGet:
            path: /version
            port: 15014
          initialDelaySeconds: 5
          periodSeconds: 5
      - name: istio-proxy
{{- if contains "/" .Values.global.proxy.image }}
        image: "{{ .Values.global.proxy.image }}"
{{- else }}
        image: "{{ .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag }}"
{{- end }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        ports:
        - containerPort: 9091
        - containerPort: 15004
        - containerPort: 15090
          protocol: TCP
          name: http-envoy-prom
        args:
        - proxy
        - --serviceCluster
        - istio-policy
        - --templateFile
        - /etc/istio/proxy/envoy_policy.yaml.tmpl
      {{- if .Values.global.controlPlaneSecurityEnabled }}
        - --controlPlaneAuthPolicy
        - MUTUAL_TLS
      {{- else }}
        - --controlPlaneAuthPolicy
        - NONE
      {{- end }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        resources:
{{- if .Values.global.proxy.resources }}
{{ toYaml .Values.global.proxy.resources | indent 10 }}
{{- else }}
{{ toYaml .Values.global.defaultResources | indent 10 }}
{{- end }}
        volumeMounts:
        - name: istio-certs
          mountPath: /etc/certs
          readOnly: true
        - name: uds-socket
          mountPath: /sock

