---

# s3, git, time, github-release, registry-image,
# pool - serialize access to external systems
# git - can also push
resources:
  - name: 24h
    type: time
    source: {interval: 24h}

  - name: istio-installer #DO NOT SET TO FORK - for testing use another pipeline and pause this one
    type: git
    source:
      uri: "https://github.com/istio/istio-installer"
  - name: istio-master
    type: git
    source:
      uri: "https://github.com/istio/istio"
      branch: master
      
jobs:
  - name: install
    serial_groups: [ cluster ]
    plan:
    - get: 24h
      trigger: true
    - get: istio-installer
      trigger: true
  
    - task: log-used-repo
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: gcr.io/peripli/istio-base
        inputs:
          - name: istio-installer
        run:
          path: /bin/sh
          args:
          - -ecx
          - |
            cd istio-installer
            git remote -v
            git branch

    - task: install-master-daily
      params: &params-master-daily
        TAG: master-latest-daily
        HUB: gcr.io/istio-release
        KUBECONFIG: ((KUBECONFIG))
        # Remove overly generous resource request to avoid unnecessarily scaling up k8s nodes
        RESOURCES_FLAGS: "--set global.resources.requests.cpu=0m --set resources.requests.cpu=0 --set resources.requests.memory=0 --set global.proxy.resources.requests.cpu=0 --set global.proxy.resources.requests.memory=0"
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: gcr.io/peripli/istio-base
        inputs:
          - name: istio-installer
        run:
          path: /bin/sh
          args:
          - -ec
          - |
            echo "$KUBECONFIG" > /tmp/kubeconfig.yaml
            export KUBECONFIG=/tmp/kubeconfig.yaml
            istio-installer/bin/cleanup.sh
            istio-installer/bin/install.sh
    
  - name: test-after-install
    serial_groups: [ cluster ]
    plan:
    - get: istio-installer
      passed: [ install ]
      trigger: true
    - get: istio-master
      trigger: false
    - get: 24h
      trigger: true
      passed: [install]
    - task: install-bookinfo
      params:
        KUBECONFIG: ((KUBECONFIG))
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: gcr.io/peripli/istio-base
        inputs:
          - name: istio-master
            path: src/github.com/istio/istio
          - name: istio-installer
        run:
          path: /bin/sh
          args:
          - -ec
          - |
            echo "$KUBECONFIG" > /tmp/kubeconfig.yaml
            export KUBECONFIG=/tmp/kubeconfig.yaml
            istio-installer/bin/test.sh --skip-cleanup src/github.com/istio/istio/

  - name: install-release-1.1
    serial_groups: [ cluster ]
    plan:
    - get: 24h
      trigger: true
      passed: [ test-after-install ]
    - get: istio-installer
      trigger: true
      passed: [ test-after-install ]

    - task: install-release-1.1
      params: &params-1-1-daily
        TAG: release-1.1-latest-daily
        HUB: gcr.io/istio-release
        RESOURCES_FLAGS: "--set global.resources.requests.cpu=0m --set resources.requests.cpu=0 --set resources.requests.memory=0 --set global.proxy.resources.requests.cpu=0 --set global.proxy.resources.requests.memory=0"
        KUBECONFIG: ((KUBECONFIG))
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: gcr.io/peripli/istio-base
        inputs:
          - name: istio-installer
        run:
          path: /bin/sh
          args:
          - -ec
          - |
            # see github issue #65, so we take an older version that works with 1.1
            cd istio-installer
            git fetch origin master
            git checkout 02d6d54442fb1f48528742a40a37c3a37888db79
            cd ..

            echo "$KUBECONFIG" > /tmp/kubeconfig.yaml
            export KUBECONFIG=/tmp/kubeconfig.yaml
            istio-installer/bin/cleanup.sh
            istio-installer/bin/install.sh
    
  - name: test-after-install-release-1.1
    serial_groups: [ cluster ]
    plan:
    - get: istio-installer
      passed: [ install-release-1.1 ]
      trigger: true
    - get: istio-master
      trigger: false
    - get: 24h
      trigger: true
      passed: [ install-release-1.1 ]
    - task: install-bookinfo
      params:
        KUBECONFIG: ((KUBECONFIG))
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: gcr.io/peripli/istio-base
        inputs:
          - name: istio-master
            path: src/github.com/istio/istio
          - name: istio-installer
        run:
          path: /bin/sh
          args:
          - -ec
          - |
            echo "$KUBECONFIG" > /tmp/kubeconfig.yaml
            export KUBECONFIG=/tmp/kubeconfig.yaml
            istio-installer/bin/test.sh --skip-cleanup src/github.com/istio/istio/

  - name: update
    serial_groups: [ cluster ]
    plan:
    - get: 24h
      trigger: true
      passed: [ test-after-install-release-1.1 ]
    - get: istio-installer
      passed: [ test-after-install-release-1.1 ]
      trigger: true
    - task: update-master-daily
      config:
        platform: linux
        params: *params-master-daily
        image_resource:
          type: docker-image
          source:
            repository: gcr.io/peripli/istio-base
        inputs:
          - name: istio-installer
        run:
          path: /bin/sh
          args:
          - -ec
          - |
            echo "$KUBECONFIG" > /tmp/kubeconfig.yaml
            export KUBECONFIG=/tmp/kubeconfig.yaml
            export REMOVE_OLD_CONTROL=true
            istio-installer/bin/install.sh
            istio-installer/bin/install.sh switch_istio_control
  
  - name: test-after-update
    serial_groups: [ cluster ]
    plan:
    - get: 24h
      trigger: true
      passed: [ update ]
    - get: istio-installer
      passed: [ update ]
      trigger: true
    - get: istio-master
    - task: install-bookinfo
      params:
        KUBECONFIG: ((KUBECONFIG))
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: gcr.io/peripli/istio-base
        inputs:
          - name: istio-master
            path: src/github.com/istio/istio
          - name: istio-installer
        run:
          path: /bin/sh
          args:
          - -ec
          - |
            echo "$KUBECONFIG" > /tmp/kubeconfig.yaml
            export KUBECONFIG=/tmp/kubeconfig.yaml
            istio-installer/bin/test.sh --skip-cleanup src/github.com/istio/istio/
